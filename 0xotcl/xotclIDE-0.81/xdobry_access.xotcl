# automatically generated from XOTclIDE
# script require component xdobry::odbc
package provide xdobry::access 0.73
package require xdobry::odbc
Class ODBCAccess -superclass ::ODBC  -parameter {{interface MSAccess}}
@ ::ODBCAccess idemeta component xdobry::access
ODBCAccess instproc connect par_list {
    [self] instvar handle connected
    set handle [Object autoname odbchandle]
    array set par_array $par_list
    foreach k [array names par_array] {
         my set $k $par_array($k)
    }
    set driver {Microsoft Access Driver (*.mdb)}
    # mdb file not exists create it
    set mdb_file $par_array(mdb_file)
    if {![file exists $mdb_file]} {
        database configure config_dsn $driver [list CREATE_DB=\"[file nativename $mdb_file]\" General]
    }
    if {[my exists extendedAnsiSQL] && [my set extendedAnsiSQL] eq "1"} {
        set addParam "ExtendedAnsiSQL=1;"
    } else {
        set addParam ""
    }
    database connect $handle "DRIVER=$driver; DBQ=[file nativename $mdb_file]; FIL=MS Access; $addParam EXCLUSIVE=Yes;"
    my set dbank $mdb_file
    set connected 1
    return 1
}
ODBCAccess instproc getTimeValue time {
    if {[string first 0000-00-00 $time]>0} {
        return NULL
    }
    # Access do not accept Time Format 00:00:00.000
    # also cut last digits
    set ret [regsub {(.*\d\d:\d\d:\d\d).\d+} $time {\1}]
    return '$ret'
}
ODBCAccess instproc getconnectargs {} {
    return {{extendedAnsiSQL text 0} {mdb_file file {}}}
}
ODBCAccess instproc getinsertid {} {
    lindex [lindex [my queryList {select @@IDENTITY}] 0] 0
}
ODBCAccess instproc insertRowAutoId {table columns values {primarykey {}} {sequenzer {}}} {
    my insertRow $table $columns $values
    my getinsertid
}
ODBCAccess proc initializeInterface {{prefs package}} {
    ODBC initializeInterface $prefs
}

